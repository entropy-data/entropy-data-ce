AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to provision the Entropy Data on AWS App Runner with an Amazon RDS PostgreSQL database'

Parameters:
  ImageIdentifier:
    Type: String
    Default: 'public.ecr.aws/s4e5k7s9/entropy-data-ce:latest'
    Description: 'Container image identifier for the App Runner service'
  DBInstanceIdentifier:
    Type: String
    Default: entropy-data-postgres
    Description: 'Database instance identifier (this RDS database will be created)'
  DBName:
    Type: String
    Default: postgres
    Description: 'Initial database name'
  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    Description: 'Database instance class'
  SuperAdmins:
    Type: String
    Default: ''
    Description: 'Enter the email address of super admin. Super admins can do anything in Entropy Data. Can changed later as environment variable.'
  AllocatedStorage:
    Type: Number
    Default: "20"
    Description: 'Allocated storage in GB'
  AppRunnerServiceName:
    Type: String
    Default: entropy-data-app-runner-service
    Description: 'App Runner service name'
  SMTPHost:
    Type: String
    Default: 'smtp.example.com'
    Description: 'SMTP server host'
  SMTPPort:
    Type: Number
    Default: "587"
    Description: 'SMTP server port'
  SMTPUsername:
    Type: String
    Default: ''
    Description: 'SMTP server username'
  SMTPPassword:
    Type: String
    Default: ''
    NoEcho: true
    Description: 'SMTP server password'
  SMTPBasicAuth:
    Type: String
    Default: true
    Description: 'Use basic authentication for SMTP server'
    AllowedValues: [ true, false ]
  SMTPStartTLS:
    Type: String
    Default: true
    Description: 'Use STARTTLS for SMTP server'
    AllowedValues: [ true, false ]
  MailFrom:
    Type: String
    Default: 'support@example.com'
    Description: 'Email address to send emails from'
  ApplicationHostWeb:
    Type: String
    Default: 'https://entropydata.example.com'
    Description: 'The web application URL. Used in emails to build links to the application.'

Resources:

  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'RDS PostgreSQL master credentials'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "entropydatadbadmin"}'
        GenerateStringKey: 'password'
        PasswordLength: 32
        ExcludeCharacters: '"@/\\'
      Tags:
        - Key: Application
          Value: entropy-data

  EntropyDataVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Application
          Value: entropy-data

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value: entropy-data

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref EntropyDataVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EntropyDataVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Application
          Value: entropy-data

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Application
          Value: entropy-data

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Application
          Value: entropy-data

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EntropyDataVPC
      Tags:
        - Key: Application
          Value: entropy-data

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EntropyDataVPC
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Application
          Value: entropy-data

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EntropyDataVPC
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Application
          Value: entropy-data

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EntropyDataVPC
      Tags:
        - Key: Application
          Value: entropy-data

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  AppRunnerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for App Runner VPC Connector"
      VpcId: !Ref EntropyDataVPC
      Tags:
        - Key: Application
          Value: entropy-data

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for RDS instance'
      VpcId: !Ref EntropyDataVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref AppRunnerSecurityGroup
      Tags:
        - Key: Application
          Value: entropy-data

  EntropyDataAppRunnerVpcConnector:
    Type: AWS::AppRunner::VpcConnector
    Properties:
      Subnets:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroups:
        - !Ref AppRunnerSecurityGroup
      Tags:
        - Key: Application
          Value: entropy-data

  EntropyDataDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet group for RDS"
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Application
          Value: entropy-data

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBName: !Ref DBName
      Engine: postgres
      MasterUsername: !Sub '{{resolve:secretsmanager:${DBSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}::password}}'
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      PubliclyAccessible: false
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId
      DBSubnetGroupName: !Ref EntropyDataDBSubnetGroup
      BackupRetentionPeriod: 7
      StorageType: gp2
      MultiAZ: false
      DeletionProtection: false
      Tags:
        - Key: Application
          Value: entropy-data

  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref DBSecret
      TargetId: !Ref RDSInstance
      TargetType: AWS::RDS::DBInstance

  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: !Ref AppRunnerServiceName
      SourceConfiguration:
        ImageRepository:
          ImageIdentifier: !Ref ImageIdentifier
          ImageRepositoryType: 'ECR_PUBLIC'
          ImageConfiguration:
            RuntimeEnvironmentVariables:
              - Name: APPLICATION_HOST_WEB
                Value: !Ref ApplicationHostWeb
              - Name: APPLICATION_SUPERADMINS
                Value: !Ref SuperAdmins
              - Name: APPLICATION_DATACONTRACT_SPECIFICATIONS
                Value: odcs
              - Name: APPLICATION_DATAPRODUCT_SPECIFICATIONTYPES
                Value: odps
              - Name: SPRING_DATASOURCE_URL
                Value: !Sub 'jdbc:postgresql://${RDSInstance.Endpoint.Address}:5432/${DBName}'
              - Name: SPRING_DATASOURCE_USERNAME
                Value: !Sub '{{resolve:secretsmanager:${DBSecret}::username}}'
              - Name: SPRING_DATASOURCE_PASSWORD
                Value: !Sub '{{resolve:secretsmanager:${DBSecret}::password}}'
              - Name: SPRING_MAIL_HOST
                Value: !Ref SMTPHost
              - Name: SPRING_MAIL_PORT
                Value: !Ref SMTPPort
              - Name: SPRING_MAIL_USERNAME
                Value: !Ref SMTPUsername
              - Name: SPRING_MAIL_PASSWORD
                Value: !Ref SMTPPassword
              - Name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH
                Value: !Ref SMTPBasicAuth
              - Name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE
                Value: !Ref SMTPStartTLS
              - Name: APPLICATION_MAIL_FROM
                Value: !Ref MailFrom
        AutoDeploymentsEnabled: false
      InstanceConfiguration:
        Cpu: '1024'
        Memory: '2048'
      HealthCheckConfiguration:
        Path: '/'
        Interval: 10
        Timeout: 5
        HealthyThreshold: 5
        UnhealthyThreshold: 2
      NetworkConfiguration:
        EgressConfiguration:
          EgressType: "VPC"
          VpcConnectorArn: !Ref EntropyDataAppRunnerVpcConnector


Outputs:
  RDSInstanceEndpoint:
    Description: 'RDS Instance Endpoint'
    Value: !GetAtt RDSInstance.Endpoint.Address
  AppRunnerServiceURL:
    Description: 'URL of the App Runner Service. Use this to set APPLICATION_HOST_WEB if not already configured.'
    Value: !Sub 'https://${AppRunnerService.ServiceUrl}'
  DBSecretArn:
    Description: 'ARN of the Secrets Manager secret containing DB credentials'
    Value: !Ref DBSecret
